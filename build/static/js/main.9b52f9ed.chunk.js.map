{"version":3,"sources":["services/groups.js","reducers/groupReducer.js","reducers/roomReducer.js","reducers/channelReducer.js","components/AddGroupForm.js","components/AddGroupFinish.js","components/AddGroup.js","components/GroupListItem.js","components/GroupList.js","components/HeaderBar.js","components/GroupDetails.js","components/RoomSelection.js","App.js","store.js","index.js"],"names":["moment","format","getAll","a","axios","get","response","data","getRooms","getRoom","code","createNew","group","roomId","object","name","username","channelId","post","remove","id","delete","getChannels","groupReducer","state","action","type","groupToChange","find","g","inactiveGroup","active","map","filter","dispatch","groupService","room","initState","selectedRoom","rooms","channelReducer","getGroupOptions","text","key","value","mapDispatchToProps","changeGroup","console","log","newGroup","connect","resources","channels","c","toUpperCase","description","withRouter","props","selectedChannel","selectedGroupName","addGroup","event","preventDefault","alert","groupName","target","history","push","Header","as","textAlign","Segment","Form","onSubmit","Field","Dropdown","placeholder","options","selection","onChange","e","TextArea","Link","to","Button","disabled","positive","rel","href","primary","Grid","centered","verticalAlign","Column","Route","exact","path","match","component","AddGroupForm","AddGroupFinish","GroupListItem","List","Item","Content","Description","startTime","endTime","activeGroups","groups","length","divided","relaxed","animated","className","undefined","HeaderBar","icon","Icon","Subheader","removeGroup","ownProps","groupId","user","onClick","negative","roomOptions","Select","changeActiveRoom","default","initGroups","initRooms","initChannels","useEffect","getParams","URLSearchParams","window","location","search","container","columns","stackable","render","Message","AddGroup","params","RoomSelection","reducer","combineReducers","roomReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9b52f9ed.chunk.js","sourcesContent":["import axios from 'axios'\nimport moment from 'moment'\nmoment().format()\nconst baseUrl = '/api'\n\nconst getAll = async () => {\n  const response = await axios.get(`${baseUrl}/reservations`)\n  return response.data\n}\n\nconst getRooms = async () => {\n  const response = await axios.get(`${baseUrl}/rooms`)\n  return response.data\n}\n\nconst getRoom = async (code) => {\n  const response = await axios.get(`${baseUrl}/rooms/${code}`)\n  return response.data\n}\n\nconst createNew = async (group, roomId) => {\n  const object = {\n    name: group.name,\n    username: group.username,\n    channelId: group.channelId\n  }\n  const response = await axios.post(`${baseUrl}/rooms/${roomId}/reservation`, object)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/reservations/${id}`)\n  return response.data\n}\nconst getChannels = async (code) => {\n  const response = await axios.get(`${baseUrl}/channels/`)\n  return response.data\n}\n\nexport default { getAll, createNew, remove, getRooms, getRoom, getChannels }\n","import groupService from '../services/groups'\n\nexport const inactivate = (id) => {\n  return{\n    type: 'INACTIVATE',\n    data: id\n  }\n}\n\nexport const changeGroup = (group, roomId) => {\n  console.log(group)\n  return async dispatch => {\n    const newGroup = await groupService.createNew(group, roomId)\n    dispatch({\n      type: 'ADD',\n      data: newGroup\n    })\n  }\n}\n\nexport const initGroups = () => {\n  return async dispatch => {\n    const groups = await groupService.getAll()\n    dispatch({\n      type: 'INIT_GROUPS',\n      data: groups\n    })\n  }\n}\n\nexport const removeGroup = (id) => {\n  return async dispatch => {\n    await groupService.remove(id)\n    dispatch({\n      type: 'REMOVE',\n      data:{\n        id\n      }\n    })\n  }\n}\n\nconst groupReducer = (state = [], action ) => {\n  switch(action.type){\n  case 'ADD':\n    return [...state, action.data]\n  case 'INACTIVATE': {\n    const id = action.data.id\n    const groupToChange = state.find(g => g.id === id)\n    const inactiveGroup = {\n      ...groupToChange,\n      active: false\n    }\n    return state.map(g =>\n      g.id === id ? inactiveGroup : g)\n  }\n  case 'INIT_GROUPS':\n    return action.data\n  case 'REMOVE':\n    return [...state].filter(g => g.id !== action.data.id)\n  default:\n    return state\n  }\n}\n\nexport default groupReducer\n","import groupService from '../services/groups'\n\nexport const initRooms = () => {\n  return async dispatch => {\n    const rooms = await groupService.getRooms()\n    dispatch({\n      type: 'INIT',\n      data: rooms\n    })\n  }\n}\n\nexport const getRoom = (code) => {\n  return async dispatch => {\n    const room = await groupService.getRoom(code)\n    dispatch({\n      type: 'CHANGE',\n      data: room\n    })\n  }\n}\n\nconst initState = {\n  selectedRoom: null,\n  rooms: []\n}\n\nconst groupReducer = (state = initState, action) => {\n  switch(action.type){\n  case 'INIT':\n    return { ...state, rooms: action.data }\n  case 'CHANGE':\n    return { ...state, selectedRoom: action.data }\n  default:\n    return state\n  }\n}\n\nexport default groupReducer\n","import groupService from '../services/groups'\n\nexport const initChannels = () => {\n    return async dispatch => {\n        const channels = await groupService.getChannels()\n        dispatch({\n            type: 'INIT_CHANNELS',\n            data: channels\n        })\n    }\n}\n\nconst channelReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_CHANNELS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default channelReducer\n","import React from 'react'\nimport { changeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button, Header, Segment, Form, Dropdown, TextArea } from 'semantic-ui-react'\n\nconst AddGroupForm = (props) => {\n  const addGroup = async (event) => {\n    event.preventDefault()\n\n    // todo: validation and better modal / pop up than this :) \n    if (props.selectedRoom.code === '123' && !selectedGroupName) {\n      alert('Select group name, plz')\n      return \n    }\n    if (!selectedChannel){\n      alert('Select channel, plz')\n      return\n    }\n\n    // if room.code 123, use dropdown \n    const groupName = props.selectedRoom.code === '123' ? selectedGroupName : event.target.description.value\n    const newGroup = {\n      name: groupName,\n      username: event.target.username.value,\n      channelId: selectedChannel\n    }\n\n    await props.changeGroup(newGroup, props.selectedRoom.id)\n    props.history.push('addgroup/done')\n  }\n\n  let selectedChannel;\n  let selectedGroupName;\n  const handleSelect =  (e, { value }) => {\n    selectedChannel = value\n  }\n  const handleSelectedLesson = (e, {value}) => {\n    selectedGroupName = value\n  }\n\n  return (\n    <>\n      <Header as=\"h2\" textAlign=\"center\">\n        Add A Group\n      </Header>\n\n      <Segment>\n        <Form onSubmit={addGroup}>\n        { console.log(props.selectedRoom)}\n        { props.selectedRoom && props.selectedRoom.code === '123' \n          ?\n          <Form.Field>\n            <label>Group Name</label>\n             <Dropdown\n              name = 'groupname'\n              placeholder='Select group name'\n              options={getGroupOptions()}\n              selection\n              onChange = {handleSelectedLesson}\n            />\n          </Form.Field>\n           : \n           <Form.Field>\n            <label>Description</label>\n            <TextArea name='description' placeholder='Description of the subject' />\n          </Form.Field>\n           }\n          <Form.Field>\n            <label>Username</label>\n            <input name='username' placeholder=\"Username\" />\n          </Form.Field>\n          <Form.Field>\n            <label>Telegram Group</label>\n            <Dropdown\n              name='telegram'\n              placeholder='Select telegram group'\n              options={props.channels}\n              selection\n              onChange = {handleSelect}\n            />\n          </Form.Field>\n          <Link to='/'>\n            <Button>Cancel</Button>\n          </Link>\n          <Button disabled={props.selectedRoom === null} type='submit' positive>Add</Button>\n        </Form>\n      </Segment>\n    </>\n  )\n}\n  const getGroupOptions = () => {\n    return [{\n      text: 'Osa 0, Web-sovellusten toiminnan perusteet',\n      key: 0,\n      value: 'Osa 0, Web-sovellusten toiminnan perusteet'\n    }, {\n        text: 'Osa 1, Reactin perusteet',\n      key: 1,\n        value: 'Osa 1, Reactin perusteet'\n    }, {\n        text: 'Osa 2, Palvelimen kanssa tapahtuva kommunikointi',\n      key: 2,\n        value: 'Osa 2, Palvelimen kanssa tapahtuva kommunikointi'\n    }, {\n        text: 'Osa 3, Palvelimen ohjelmointi NodeJS:n Express-kirjastolla',\n      key: 3,\n        value: 'Osa 3, Palvelimen ohjelmointi NodeJS:n Express-kirjastolla'\n    }, {\n        text: 'Osa 4, Express-sovellusten testaaminen, käyttäjänhallinta',\n      key: 4,\n        value: 'Osa 4, Express-sovellusten testaaminen, käyttäjänhallinta'\n    }, {\n        text: 'Osa 5, React-sovelluksen testaaminen, custom hookit',\n      key: 5,\n        value: 'Osa 5, React-sovelluksen testaaminen, custom hookit'\n    }, {\n        text: 'Osa 6, Sovelluksen tilan hallinta Redux-kirjastolla',\n      key: 6,\n      value: 'Osa 6, Sovelluksen tilan hallinta Redux-kirjastolla'\n    }, {\n      text: 'Osa 7, React router, tyylikirjastot ja webpack',\n      key: 7,\n        value: 'Osa 7, React router, tyylikirjastot ja webpack'\n    }, {\n      text: 'Osa 8, GraphQL',\n      key: 8,\n      value: 'Osa 8, GraphQL'\n    }]\n  }\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    channels: state.channels.map(c => {\n      console.log(c)\n      return {\n        key: c.channelId,\n        text: c.name.toUpperCase() + ` - ${c.description}`,\n        value: c.channelId\n      }\n\n    })\n  }\n}\n\nconst mapDispatchToProps =  {\n  changeGroup\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(AddGroupForm))\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\n\nconst AddGroupFinish = () => {\n  return (\n    <>\n      <h3>Group created!</h3>\n      <p>\n        We&apos;ve informed your friends at&nbsp;\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/HvqK1VaXQKchMpcHRIW2Ig\">t.me/stdy_qrp</a>\n      </p>\n      <Link to={'/'}>\n        <Button primary>Done</Button>\n      </Link>\n    </>\n  )\n}\n\nexport default withRouter(AddGroupFinish)\n","import React from 'react'\nimport { withRouter, Route } from 'react-router-dom'\nimport { Grid } from 'semantic-ui-react'\nimport AddGroupForm from './AddGroupForm'\nimport AddGroupFinish from './AddGroupFinish'\n\nconst AddGroup = (props) => {\n  return (\n    <Grid centered verticalAlign='middle'>\n      <Grid.Column>\n        <Route exact path={props.match.path} component={AddGroupForm} />\n        <Route path={`${props.match.path}/done`} component={AddGroupFinish} />\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default withRouter(AddGroup)\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\nimport Moment from 'react-moment'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst GroupListItem = ({ group }) => {\n  return(\n    <List.Item>\n      <List.Content>\n        <Link to={`details/${group.id}`}>\n          <List.Header>{group.name}</List.Header>\n        </Link>\n        <List.Description>\n          {group.room && (<>{group.room.name}<br/></>)}\n          <Moment format=\"HH:mm\">{group.startTime}</Moment>\n          -\n          <Moment format=\"HH:mm\">{group.endTime}</Moment>\n        </List.Description>\n      </List.Content>\n    </List.Item>\n  )\n}\n\nexport default GroupListItem\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getRoom } from '../reducers/roomReducer'\nimport { List, Header, Button, Segment } from 'semantic-ui-react'\nimport GroupListItem from './GroupListItem'\nimport { Link } from 'react-router-dom'\n\nconst GroupList = (props) => {\n  return (\n    <Segment placeholder textAlign='center'>\n      <Header as=\"h2\" textAlign=\"center\">\n        Active Groups\n      </Header>\n      {props.activeGroups.length < 1 ?\n        <p>No active groups. Maybe create a group? </p> :\n        <List divided relaxed animated>\n          {props.activeGroups.map(g => <GroupListItem key={g.id} group={g}/>)}\n        </List>\n      }\n      <Link to={'/addgroup'} className={props.selectedRoom === null ? 'disabled-link' : undefined}>\n        <Button disabled={props.selectedRoom === null} primary>Add new group</Button>\n      </Link>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeGroups: state.groups,\n    selectedRoom: state.resources.selectedRoom\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getRoom }\n)(GroupList)\n","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HeaderBar = () => {\n  return(\n    <Header as='h1' icon textAlign='center'>\n      <Icon name='handshake'/>\n      <Header.Content>\n            QRP\n        <Header.Subheader>Study Together</Header.Subheader>\n      </Header.Content>\n    </Header>\n  )\n}\n\nexport default HeaderBar","import React from 'react'\nimport { Grid, Header, Button, List, Segment } from 'semantic-ui-react'\nimport { removeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nconst GroupDetails = (props) => {\n  const { group } = props\n\n  if (!group) {\n    // Wait for asynchronous operation\n    return null\n  }\n\n  const remove = (id) => {\n    props.removeGroup(id)\n    props.history.push('/')\n  }\n\n  return (\n    <Grid verticalAlign='middle'>\n      <Grid.Column>\n        <Header>\n          Reservation Details\n        </Header>\n        <Segment>\n          <Header as=\"h2\" textAlign=\"center\">\n            {group.name}\n          </Header>\n          <List.Item>\n            <List.Content>\n              <List.Description>\n                {group.room && (<>{group.room.name}<br/></>)}\n                <Moment format=\"HH:mm\">{group.startTime}</Moment>\n                -\n                <Moment format=\"HH:mm\">{group.endTime}</Moment>\n                <br/>\n                {group.user && (<>{group.user.username}</>)}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        </Segment>\n        <Header>\n          Ending reservation\n        </Header>\n        <Segment>\n          <p>To end this reservation now, click the 'end' button</p>\n          <p>Reservation will end immediately, and room is freed for other groups</p>\n          <Button onClick={() => remove(group.id)} negative>End</Button>\n        </Segment>\n        <Link to='/'>\n          <Button>Go Back</Button>\n        </Link>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst getGroupById = (groups, id) => groups.find(g => g.id === id)\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    group: getGroupById(state.groups, ownProps.groupId),\n  }\n}\n\nconst mapDispatchToProps =  {\n  removeGroup\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(GroupDetails))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Form, Button } from 'semantic-ui-react'\nimport { getRoom } from '../reducers/roomReducer'\nimport { withRouter, Link } from 'react-router-dom'\n\nconst SelectRoom = (props) => {\n  const changeActiveRoom = (value) => {\n    props.getRoom(value)\n    props.history.push('/')\n  }\n\n  const roomOptions = props.rooms.map(room => ({ value:room.code, text:room.name }))\n  console.log(roomOptions)\n\n  return (\n    <Form>\n      <Form.Field>\n        <label>Room</label>\n        <Select\n          placeholder='Select room'\n          onChange={(e, { value }) => changeActiveRoom(value)}\n          options={roomOptions}>\n        </Select>\n      </Form.Field>\n      <Link to={'/'}>\n        <Button default>Back</Button>\n      </Link>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    rooms: state.resources.rooms\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getRoom }\n)(withRouter(SelectRoom))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { initGroups } from './reducers/groupReducer'\nimport { getRoom, initRooms } from './reducers/roomReducer'\nimport { initChannels } from './reducers/channelReducer'\nimport './App.css'\nimport AddGroup from './components/AddGroup'\nimport GroupList from './components/GroupList'\nimport HeaderBar from './components/HeaderBar'\nimport GroupDetails from './components/GroupDetails'\nimport RoomSelection from './components/RoomSelection'\nimport { Grid, Message, Button, Segment, } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initGroups()\n    props.initRooms()\n    props.initChannels()\n    getParams()\n  }, [])\n\n  const getParams = () => {\n    const searchParams = new URLSearchParams(window.location.search)\n    const room = searchParams.get('room')\n    if (room) {\n      props.getRoom(room)\n    }\n  }\n\n  const showInfo = () => (\n    <Segment textAlign='center'>\n      <Message positive>\n        {props.selectedRoom ? (\n          <Message.Header>Looks like you&apos;re in {props.selectedRoom.name}</Message.Header>\n        ) : (\n          <Link to={'/selectroom'}>\n            <Button primary>Start by choosing a room</Button>\n          </Link>\n        )}\n      </Message>\n    </Segment>\n  )\n\n  const sendFeedback = () => (\n    <Segment textAlign=\"center\">\n      <Button>\n        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeyOuBflQfeg0uXfNdofHR74wqHktYReZyH3Mb23IyInBBMFQ/viewform?usp=sf_link\" target=\"_blank\" rel=\"noopener noreferrer\" >\n        Provide Feedback\n        </a>\n      </Button>\n    </Segment>\n  )\n\n  return (\n    <Router>\n      <div>\n        <HeaderBar />\n        <Grid container columns={1} relaxed stackable>\n          <Grid.Column>\n            <Route exact path='/' render = {(/* { match } */) =>\n              <div>\n                {showInfo()}\n                <GroupList />\n                {sendFeedback()}\n              </div>\n            }/>\n            <Route path=\"/addgroup\" component={AddGroup} />\n            <Route exact path=\"/details/:id\" render={({ match }) =>\n              <GroupDetails groupId={match.params.id} />\n            }/>\n            <Route exact path=\"/selectroom\" render={(/* { match } */) =>\n              <RoomSelection />\n            } />\n          </Grid.Column>\n        </Grid>\n      </div>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    rooms: state.resources.rooms\n  }\n}\n\nconst mapDispatchToProps = {\n  initGroups,\n  getRoom,\n  initRooms,\n  initChannels\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport groupReducer from './reducers/groupReducer'\nimport roomReducer from './reducers/roomReducer'\nimport channelReducer from './reducers/channelReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  groups: groupReducer,\n  resources: roomReducer,\n  channels: channelReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}