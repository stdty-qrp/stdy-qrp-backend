{"version":3,"sources":["services/groups.js","reducers/groupReducer.js","reducers/roomReducer.js","reducers/channelReducer.js","components/AddGroupForm.js","components/AddGroupFinish.js","components/AddGroup.js","components/GroupListItem.js","components/GroupList.js","components/HeaderBar.js","components/GroupDetails.js","components/RoomSelection.js","App.js","store.js","index.js"],"names":["moment","format","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","this","arguments","getRooms","_ref2","_callee2","_context2","getRoom","_ref3","_callee3","code","_context3","_x","services_groups","createNew","_ref4","_callee4","group","roomId","object","_context4","name","username","channelId","post","_x2","_x3","remove","_ref5","_callee5","id","_context5","delete","_x4","getChannels","_ref6","_callee6","_context6","_x5","groupReducer","state","length","undefined","action","type","toConsumableArray","groupToChange","find","g","inactiveGroup","objectSpread","active","map","filter","dispatch","room","groupService","initState","selectedRoom","rooms","channelReducer","getGroupOptions","text","key","value","mapDispatchToProps","changeGroup","console","log","newGroup","connect","resources","channels","c","toUpperCase","description","withRouter","props","selectedChannel","selectedGroupName","addGroup","event","groupName","preventDefault","alert","target","history","push","react_default","createElement","Fragment","Header","as","textAlign","Segment","Form","onSubmit","Field","Dropdown","placeholder","options","selection","onChange","e","TextArea","Link","to","Button","disabled","positive","rel","href","primary","Grid","centered","verticalAlign","Column","Route","exact","path","match","component","AddGroupForm","AddGroupFinish","GroupListItem","List","Item","Content","Description","dist_default","startTime","endTime","activeGroups","groups","divided","relaxed","animated","components_GroupListItem","className","HeaderBar","icon","Icon","Subheader","removeGroup","ownProps","groupId","user","onClick","negative","roomOptions","Select","changeActiveRoom","default","initGroups","initRooms","initChannels","useEffect","getParams","URLSearchParams","window","location","search","BrowserRouter","components_HeaderBar","container","columns","stackable","render","Message","components_GroupList","AddGroup","components_GroupDetails","params","RoomSelection","reducer","combineReducers","roomReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e0642d2c.chunk.js","sourcesContent":["import axios from 'axios'\nimport moment from 'moment'\nmoment().format()\nconst baseUrl = '/api'\n\nconst getAll = async () => {\n  const response = await axios.get(`${baseUrl}/reservations`)\n  return response.data\n}\n\nconst getRooms = async () => {\n  const response = await axios.get(`${baseUrl}/rooms`)\n  return response.data\n}\n\nconst getRoom = async (code) => {\n  const response = await axios.get(`${baseUrl}/rooms/${code}`)\n  return response.data\n}\n\nconst createNew = async (group, roomId) => {\n  const object = {\n    name: group.name,\n    username: group.username,\n    channelId: group.channelId\n  }\n  const response = await axios.post(`${baseUrl}/rooms/${roomId}/reservation`, object)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/reservations/${id}`)\n  return response.data\n}\nconst getChannels = async (code) => {\n  const response = await axios.get(`${baseUrl}/channels/`)\n  return response.data\n}\n\nexport default { getAll, createNew, remove, getRooms, getRoom, getChannels }\n","import groupService from '../services/groups'\n\nexport const inactivate = (id) => {\n  return{\n    type: 'INACTIVATE',\n    data: id\n  }\n}\n\nexport const changeGroup = (group, roomId) => {\n  console.log(group)\n  return async dispatch => {\n    const newGroup = await groupService.createNew(group, roomId)\n    dispatch({\n      type: 'ADD',\n      data: newGroup\n    })\n  }\n}\n\nexport const initGroups = () => {\n  return async dispatch => {\n    const groups = await groupService.getAll()\n    dispatch({\n      type: 'INIT_GROUPS',\n      data: groups\n    })\n  }\n}\n\nexport const removeGroup = (id) => {\n  return async dispatch => {\n    await groupService.remove(id)\n    dispatch({\n      type: 'REMOVE',\n      data:{\n        id\n      }\n    })\n  }\n}\n\nconst groupReducer = (state = [], action ) => {\n  switch(action.type){\n  case 'ADD':\n    return [...state, action.data]\n  case 'INACTIVATE': {\n    const id = action.data.id\n    const groupToChange = state.find(g => g.id === id)\n    const inactiveGroup = {\n      ...groupToChange,\n      active: false\n    }\n    return state.map(g =>\n      g.id === id ? inactiveGroup : g)\n  }\n  case 'INIT_GROUPS':\n    return action.data\n  case 'REMOVE':\n    return [...state].filter(g => g.id !== action.data.id)\n  default:\n    return state\n  }\n}\n\nexport default groupReducer\n","import groupService from '../services/groups'\n\nexport const initRooms = () => {\n  return async dispatch => {\n    const rooms = await groupService.getRooms()\n    dispatch({\n      type: 'INIT',\n      data: rooms\n    })\n  }\n}\n\nexport const getRoom = (code) => {\n  return async dispatch => {\n    const room = await groupService.getRoom(code)\n    dispatch({\n      type: 'CHANGE',\n      data: room\n    })\n  }\n}\n\nconst initState = {\n  selectedRoom: null,\n  rooms: []\n}\n\nconst groupReducer = (state = initState, action) => {\n  switch(action.type){\n  case 'INIT':\n    return { ...state, rooms: action.data }\n  case 'CHANGE':\n    return { ...state, selectedRoom: action.data }\n  default:\n    return state\n  }\n}\n\nexport default groupReducer\n","import groupService from '../services/groups'\n\nexport const initChannels = () => {\n    return async dispatch => {\n        const channels = await groupService.getChannels()\n        dispatch({\n            type: 'INIT_CHANNELS',\n            data: channels\n        })\n    }\n}\n\nconst channelReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_CHANNELS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default channelReducer\n","import React from 'react'\nimport { changeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button, Header, Segment, Form, Dropdown, TextArea } from 'semantic-ui-react'\n\nconst AddGroupForm = (props) => {\n  const addGroup = async (event) => {\n    event.preventDefault()\n\n    // todo: validation and better modal / pop up than this :) \n    if (props.selectedRoom.code === '123' && !selectedGroupName) {\n      alert('Select group name, plz')\n      return \n    }\n    if (!selectedChannel){\n      alert('Select channel, plz')\n      return\n    }\n\n    // if room.code 123, use dropdown \n    const groupName = props.selectedRoom.code === '123' ? selectedGroupName : event.target.description.value\n    const newGroup = {\n      name: groupName,\n      username: event.target.username.value,\n      channelId: selectedChannel\n    }\n\n    await props.changeGroup(newGroup, props.selectedRoom.id)\n    props.history.push('addgroup/done')\n  }\n\n  let selectedChannel;\n  let selectedGroupName;\n  const handleSelect =  (e, { value }) => {\n    selectedChannel = value\n  }\n  const handleSelectedLesson = (e, {value}) => {\n    selectedGroupName = value\n  }\n\n  return (\n    <>\n      <Header as=\"h2\" textAlign=\"center\">\n        Add A Group\n      </Header>\n\n      <Segment>\n        <Form onSubmit={addGroup}>\n        { console.log(props.selectedRoom)}\n        { props.selectedRoom && props.selectedRoom.code === '123' \n          ?\n          <Form.Field>\n            <label>Group Name</label>\n             <Dropdown\n              name = 'groupname'\n              placeholder='Select group name'\n              options={getGroupOptions()}\n              selection\n              onChange = {handleSelectedLesson}\n            />\n          </Form.Field>\n           : \n           <Form.Field>\n            <label>Description</label>\n            <TextArea name='description' placeholder='Description of the subject' />\n          </Form.Field>\n           }\n          <Form.Field>\n            <label>Username</label>\n            <input name='username' placeholder=\"Username\" />\n          </Form.Field>\n          <Form.Field>\n            <label>Telegram Group</label>\n            <Dropdown\n              name='telegram'\n              placeholder='Select telegram group'\n              options={props.channels}\n              selection\n              onChange = {handleSelect}\n            />\n          </Form.Field>\n          <Link to='/'>\n            <Button>Cancel</Button>\n          </Link>\n          <Button disabled={props.selectedRoom === null} type='submit' positive>Add</Button>\n        </Form>\n      </Segment>\n    </>\n  )\n}\n  const getGroupOptions = () => {\n    return [{\n      text: 'Osa 0, Web-sovellusten toiminnan perusteet',\n      key: 0,\n      value: 'Osa 0, Web-sovellusten toiminnan perusteet'\n    }, {\n        text: 'Osa 1, Reactin perusteet',\n      key: 1,\n        value: 'Osa 1, Reactin perusteet'\n    }, {\n        text: 'Osa 2, Palvelimen kanssa tapahtuva kommunikointi',\n      key: 2,\n        value: 'Osa 2, Palvelimen kanssa tapahtuva kommunikointi'\n    }, {\n        text: 'Osa 3, Palvelimen ohjelmointi NodeJS:n Express-kirjastolla',\n      key: 3,\n        value: 'Osa 3, Palvelimen ohjelmointi NodeJS:n Express-kirjastolla'\n    }, {\n        text: 'Osa 4, Express-sovellusten testaaminen, käyttäjänhallinta',\n      key: 4,\n        value: 'Osa 4, Express-sovellusten testaaminen, käyttäjänhallinta'\n    }, {\n        text: 'Osa 5, React-sovelluksen testaaminen, custom hookit',\n      key: 5,\n        value: 'Osa 5, React-sovelluksen testaaminen, custom hookit'\n    }, {\n        text: 'Osa 6, Sovelluksen tilan hallinta Redux-kirjastolla',\n      key: 6,\n      value: 'Osa 6, Sovelluksen tilan hallinta Redux-kirjastolla'\n    }, {\n      text: 'Osa 7, React router, tyylikirjastot ja webpack',\n      key: 7,\n        value: 'Osa 7, React router, tyylikirjastot ja webpack'\n    }, {\n      text: 'Osa 8, GraphQL',\n      key: 8,\n      value: 'Osa 8, GraphQL'\n    }]\n  }\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    channels: state.channels.map(c => {\n      console.log(c)\n      return {\n        key: c.channelId,\n        text: c.name.toUpperCase() + ` - ${c.description}`,\n        value: c.channelId\n      }\n\n    })\n  }\n}\n\nconst mapDispatchToProps =  {\n  changeGroup\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(AddGroupForm))\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\n\nconst AddGroupFinish = () => {\n  return (\n    <>\n      <h3>Group created!</h3>\n      <p>\n        We&apos;ve informed your friends at&nbsp;\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/HvqK1VaXQKchMpcHRIW2Ig\">t.me/stdy_qrp</a>\n      </p>\n      <Link to={'/'}>\n        <Button primary>Done</Button>\n      </Link>\n    </>\n  )\n}\n\nexport default withRouter(AddGroupFinish)\n","import React from 'react'\nimport { withRouter, Route } from 'react-router-dom'\nimport { Grid } from 'semantic-ui-react'\nimport AddGroupForm from './AddGroupForm'\nimport AddGroupFinish from './AddGroupFinish'\n\nconst AddGroup = (props) => {\n  return (\n    <Grid centered verticalAlign='middle'>\n      <Grid.Column>\n        <Route exact path={props.match.path} component={AddGroupForm} />\n        <Route path={`${props.match.path}/done`} component={AddGroupFinish} />\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default withRouter(AddGroup)\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\nimport Moment from 'react-moment'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst GroupListItem = ({ group }) => {\n  return(\n    <List.Item>\n      <List.Content>\n        <Link to={`details/${group.id}`}>\n          <List.Header>{group.name}</List.Header>\n        </Link>\n        <List.Description>\n          {group.room && (<>{group.room.name}<br/></>)}\n          <Moment format=\"HH:mm\">{group.startTime}</Moment>\n          -\n          <Moment format=\"HH:mm\">{group.endTime}</Moment>\n        </List.Description>\n      </List.Content>\n    </List.Item>\n  )\n}\n\nexport default GroupListItem\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getRoom } from '../reducers/roomReducer'\nimport { List, Header, Button, Segment } from 'semantic-ui-react'\nimport GroupListItem from './GroupListItem'\nimport { Link } from 'react-router-dom'\n\nconst GroupList = (props) => {\n  return (\n    <Segment placeholder textAlign='center'>\n      <Header as=\"h2\" textAlign=\"center\">\n        Active Groups\n      </Header>\n      {props.activeGroups.length < 1 ?\n        <p>No active groups. Maybe create a group? </p> :\n        <List divided relaxed animated>\n          {props.activeGroups.map(g => <GroupListItem key={g.id} group={g}/>)}\n        </List>\n      }\n      <Link to={'/addgroup'} className={props.selectedRoom === null ? 'disabled-link' : undefined}>\n        <Button disabled={props.selectedRoom === null} primary>Add new group</Button>\n      </Link>\n    </Segment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeGroups: state.groups,\n    selectedRoom: state.resources.selectedRoom\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getRoom }\n)(GroupList)\n","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HeaderBar = () => {\n  return(\n    <Header as='h1' icon textAlign='center'>\n      <Icon name='handshake'/>\n      <Header.Content>\n            QRP\n        <Header.Subheader>Study Together</Header.Subheader>\n      </Header.Content>\n    </Header>\n  )\n}\n\nexport default HeaderBar","import React from 'react'\nimport { Grid, Header, Button, List, Segment } from 'semantic-ui-react'\nimport { removeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nconst GroupDetails = (props) => {\n  const { group } = props\n\n  if (!group) {\n    // Wait for asynchronous operation\n    return null\n  }\n\n  const remove = (id) => {\n    props.removeGroup(id)\n    props.history.push('/')\n  }\n\n  return (\n    <Grid verticalAlign='middle'>\n      <Grid.Column>\n        <Header>\n          Reservation Details\n        </Header>\n        <Segment>\n          <Header as=\"h2\" textAlign=\"center\">\n            {group.name}\n          </Header>\n          <List.Item>\n            <List.Content>\n              <List.Description>\n                {group.room && (<>{group.room.name}<br/></>)}\n                <Moment format=\"HH:mm\">{group.startTime}</Moment>\n                -\n                <Moment format=\"HH:mm\">{group.endTime}</Moment>\n                <br/>\n                {group.user && (<>{group.user.username}</>)}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        </Segment>\n        <Header>\n          Ending reservation\n        </Header>\n        <Segment>\n          <p>To end this reservation now, click the 'end' button</p>\n          <p>Reservation will end immediately, and room is freed for other groups</p>\n          <Button onClick={() => remove(group.id)} negative>End</Button>\n        </Segment>\n        <Link to='/'>\n          <Button>Go Back</Button>\n        </Link>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst getGroupById = (groups, id) => groups.find(g => g.id === id)\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    group: getGroupById(state.groups, ownProps.groupId),\n  }\n}\n\nconst mapDispatchToProps =  {\n  removeGroup\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(GroupDetails))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Form, Button } from 'semantic-ui-react'\nimport { getRoom } from '../reducers/roomReducer'\nimport { withRouter, Link } from 'react-router-dom'\n\nconst SelectRoom = (props) => {\n  const changeActiveRoom = (value) => {\n    props.getRoom(value)\n    props.history.push('/')\n  }\n\n  const roomOptions = props.rooms.map(room => ({ value:room.code, text:room.name }))\n  console.log(roomOptions)\n\n  return (\n    <Form>\n      <Form.Field>\n        <label>Room</label>\n        <Select\n          placeholder='Select room'\n          onChange={(e, { value }) => changeActiveRoom(value)}\n          options={roomOptions}>\n        </Select>\n      </Form.Field>\n      <Link to={'/'}>\n        <Button default>Back</Button>\n      </Link>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    rooms: state.resources.rooms\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getRoom }\n)(withRouter(SelectRoom))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { initGroups } from './reducers/groupReducer'\nimport { getRoom, initRooms } from './reducers/roomReducer'\nimport { initChannels } from './reducers/channelReducer'\nimport './App.css'\nimport AddGroup from './components/AddGroup'\nimport GroupList from './components/GroupList'\nimport HeaderBar from './components/HeaderBar'\nimport GroupDetails from './components/GroupDetails'\nimport RoomSelection from './components/RoomSelection'\nimport { Grid, Message, Button, Segment, } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\n\nconst  App = (props) => {\n  useEffect(() => {\n    props.initGroups()\n    props.initRooms()\n    props.initChannels()\n    getParams()\n  },[])\n\n  const getParams = () => {\n    const searchParams = new URLSearchParams(window.location.search)\n    const room = searchParams.get('room')\n    if (room) {\n      props.getRoom(room)\n    }\n  }\n\n  const showInfo = () => (\n    <Segment>\n      <Message positive>\n        {props.selectedRoom ? (\n          <Message.Header>Looks like you&apos;re in {props.selectedRoom.name}</Message.Header>\n        ) : (\n          <Link to={'/selectroom'}>\n            <Button primary>Start by choosing a room</Button>\n          </Link>\n        )}\n      </Message>\n    </Segment>\n  )\n\n  const sendFeedback = () => (\n    <Segment>\n       <Button>\n       <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeyOuBflQfeg0uXfNdofHR74wqHktYReZyH3Mb23IyInBBMFQ/viewform?usp=sf_link\" target=\"_blank\" >\n        Provide Feedback\n        </a>\n       </Button>\n    </Segment>\n  )\n\n  return (\n    <Router>\n      <div>\n        <HeaderBar />\n        <Grid container columns={1} relaxed stackable>\n          <Grid.Column>\n            <Route exact path='/' render = {(/* { match } */) =>\n              <div>\n                {showInfo()}\n                <GroupList />\n                {sendFeedback()}\n              </div>\n            }/>\n            <Route path=\"/addgroup\" component={AddGroup} />\n            <Route exact path=\"/details/:id\" render={({ match }) =>\n              <GroupDetails groupId={match.params.id} />\n            }/>\n            <Route exact path=\"/selectroom\" render={(/* { match } */) =>\n              <RoomSelection />\n            } />\n          </Grid.Column>\n        </Grid>\n      </div>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRoom: state.resources.selectedRoom,\n    rooms: state.resources.rooms\n  }\n}\n\nconst mapDispatchToProps = {\n  initGroups,\n  getRoom,\n  initRooms,\n  initChannels\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport groupReducer from './reducers/groupReducer'\nimport roomReducer from './reducers/roomReducer'\nimport channelReducer from './reducers/channelReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  groups: groupReducer,\n  resources: roomReducer,\n  channels: channelReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}