{"version":3,"sources":["services/groups.js","reducers/groupReducer.js","components/body.js","components/GroupListItem.js","components/GroupList.js","components/HeaderBar.js","components/DeleteGroup.js","App.js","reducers/roomReducer.js","store.js","index.js"],"names":["moment","format","services_groups","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","apply","this","arguments","createNew","_ref2","_callee2","group","object","_context2","name","username","post","_x","remove","_ref3","_callee3","id","_context3","delete","_x2","groupReducer","state","length","undefined","action","type","console","log","toConsumableArray","groupToChange","find","g","inactiveGroup","objectSpread","active","map","filter","mapDispatchToProps","changeGroup","dispatch","newGroup","groupService","connect","room","withRouter","props","addGroup","event","preventDefault","target","groupname","value","history","push","react_default","createElement","Grid","centered","verticalAlign","Column","Header","as","textAlign","Segment","Form","onSubmit","Field","placeholder","Dropdown","options","text","selection","onChange","Button","GroupListItem","List","Item","Content","Link","to","Description","Location","dist_default","startTime","activeGroups","divided","relaxed","animated","components_GroupListItem","key","primary","HeaderBar","icon","Icon","Subheader","removeGroup","_x3","onClick","groups","initGroups","useEffect","BrowserRouter","components_HeaderBar","container","columns","stackable","Route","exact","path","render","components_GroupList","body","match","components_DeleteGroup","params","reducer","combineReducers","roomReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b78ef4aa.chunk.js","sourcesContent":["import axios from 'axios'\nimport moment from 'moment'\nmoment().format()\nconst baseUrl = '/api'\n\nconst getAll = async () => {\n  const response = await axios.get(`${baseUrl}/reservations`)\n  return response.data\n}\n\nconst createNew = async group => {\n  const object = {\n    name: group.name,\n    username: group.username,\n  }\n\n  const roomId = '5c92aac21c9d4400003c60bf' // <- TODO: should come from the form\n  const response = await axios.post(`${baseUrl}/rooms/${roomId}/reservation`, object)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, createNew, remove }\n","import groupService from '../services/groups'\n\nexport const inactivate = (id) => {\n  return{\n    type: 'INACTIVATE',\n    data: id\n  }\n}\n\nexport const changeGroup = (group) => {\n  return async dispatch => {\n    const newGroup = await groupService.createNew(group)\n    dispatch({\n      type: 'ADD',\n      data: newGroup\n    })\n  }\n}\n\nexport const initGroups = () => {\n  return async dispatch => {\n    const groups = await groupService.getAll()\n    dispatch({\n      type: 'INIT_GROUPS',\n      data: groups\n    })\n\n  }\n}\n\nexport const removeGroup = (id) => {\n  return async dispatch => {\n    await groupService.remove(id)\n    dispatch({\n      type: 'REMOVE',\n      data:{\n        id\n      }\n    })\n  }\n}\n\nconst groupReducer = (state = [], action ) => {\n  switch(action.type){\n  case 'ADD':\n    console.log(action.data)\n    return [...state, action.data]\n  case 'INACTIVATE': {\n    const id = action.data.id\n    const groupToChange = state.find(g => g.id === id)\n    const inactiveGroup = {\n      ...groupToChange,\n      active: false\n    }\n    return state.map(g =>\n      g.id === id ? inactiveGroup : g)\n  }\n  case 'INIT_GROUPS':\n    return action.data\n  case 'REMOVE':\n    return [...state].filter(g => g.id !== action.data.id)\n  default:\n    return state\n  }\n}\n\nexport default groupReducer\n","import React/* ,{ useState } */ from 'react'\nimport { changeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Button\n  ,Grid\n  ,Header\n  ,Segment\n  ,Form\n  ,Dropdown } from 'semantic-ui-react'\n\n\nconst Body = (props) => {\n  //state to save the telegram group selection\n  // const [telegramGroup, setTelegramGroup] = useState('')\n\n  const getTelegramGroup = (/* event,{ value } */) => {\n    // setTelegramGroup(value)\n  }\n\n  const addGroup = async (event) => {\n    event.preventDefault()\n    const newGroup = {\n      name: event.target.groupname.value,\n      username: event.target.username.value,\n\n    }\n    props.changeGroup(newGroup)\n    props.history.push('/')\n\n  }\n  return(\n    <Grid centered verticalAlign='middle'>\n      <Grid.Column>\n        <Header as=\"h2\" textAlign=\"center\">\n                Add A Group\n        </Header>\n        <Segment>\n          <Form onSubmit={addGroup}>\n            <Form.Field>\n              <label>Group Name</label>\n              <input name='groupname' placeholder=\"Group Name\" />\n            </Form.Field>\n            <Form.Field>\n              <label>Username</label>\n              <input name='username' placeholder=\"Username\" />\n            </Form.Field>\n            <Form.Field>\n              <label>Telegram Group</label>\n              <Dropdown\n                name='telegram'\n                placeholder='Select telegram group'\n                options={[{ value: 'DIS', text: 'Designing Interactive Systems' }]}\n                selection\n                onChange={getTelegramGroup}\n              />\n            </Form.Field>\n            <Button type='submit'>Add</Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    group: state.group,\n    room: state.room\n  }\n}\n\nconst mapDispatchToProps =  {\n  changeGroup\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Body))\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\nimport Moment from 'react-moment'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst GroupListItem = ({ group }) => {\n  return(\n\n    <List.Item>\n      <List.Content>\n        <Link to={`deleteGroup/${group.id}`}>\n          <List.Header>{group.name}</List.Header>\n        </Link>\n        <List.Description>\n                At {group.Location}\n                Start time: <Moment format=\"HH:mm DD/MM/YYYY\"\n          >{group.startTime}</Moment>\n        </List.Description>\n      </List.Content>\n    </List.Item>\n\n  )\n}\n\nexport default GroupListItem\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { List, Header, Button, Segment } from 'semantic-ui-react'\nimport GroupListItem from './GroupListItem'\nimport {\n  Link\n} from 'react-router-dom'\n\nconst GroupList = (props) => {\n  return(\n    <Segment placeholder textAlign='center'>\n      <Header as=\"h2\" textAlign=\"center\">\n            Active Groups\n      </Header>\n      {props.activeGroups.length < 1 ?\n        <p>No active groups. Maybe create a group? </p> :\n        <List divided relaxed animated>\n          {props.activeGroups.map(g => <GroupListItem key={g.id} group={g}/>)}\n        </List>\n      }\n      <Link to='/addgroup'>\n        <Button primary>Add new group</Button>\n      </Link>\n    </Segment>\n  )\n}\n\n/*const activeGroups = (groups) => {\n    const activeGroups = groups.filter(g => g.active === true)\n    return activeGroups\n}*/\nconst mapStateToProps = (state) => {\n  return{\n    activeGroups: state.group\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GroupList)\n","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HeaderBar = () => {\n  return(\n    <Header as='h1' icon textAlign='center'>\n      <Icon name='handshake'/>\n      <Header.Content>\n            QRP\n        <Header.Subheader>Study Together</Header.Subheader>\n      </Header.Content>\n    </Header>\n  )\n}\n\nexport default HeaderBar","import React from 'react'\nimport { Grid, Header, Button } from 'semantic-ui-react'\nimport { removeGroup } from '../reducers/groupReducer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nconst DeleteGroup = (props) => {\n  console.log(props)\n  const remove = (id) => {\n    props.removeGroup(id)\n    props.history.push('/')\n\n  }\n  return(\n    <Grid verticalAlign='middle'>\n      <Grid.Column>\n        <Header as=\"h2\" textAlign=\"center\">\n                Delete Group\n        </Header>\n        <p>You are deleting group:  {props.group.name}</p>\n        <Button\n          onClick={() => remove(props.group.id)}\n        >Delete</Button>\n      </Grid.Column>\n    </Grid>\n  )\n}\nconst mapDispatchToProps =  {\n  removeGroup\n}\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(DeleteGroup))\n","import React,{ useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { initGroups } from './reducers/groupReducer'\nimport './App.css'\nimport Body from './components/body'\nimport GroupList from './components/GroupList'\nimport HeaderBar from './components/HeaderBar'\nimport DeleteGroup from './components/DeleteGroup'\nimport { Grid } from 'semantic-ui-react'\n\nimport {\n  BrowserRouter as Router,\n  Route } from 'react-router-dom'\n\nconst  App = (props) => {\n  useEffect(() => {\n    props.initGroups()\n  },[])\n\n  const groupById = (id) => props.groups.find(g => g.id === id)\n\n  return (\n    <Router>\n      <div>\n        <HeaderBar />\n        <Grid container columns={1} relaxed stackable>\n          <Grid.Column>\n            <Route exact path=\"/\" render={() =>\n              <GroupList />\n            } />\n            <Route exact path=\"/addgroup\" render={() =>\n              <Body/>\n            } />\n            <Route exact path=\"/deleteGroup/:id\" render={({ match }) =>\n              <DeleteGroup group={groupById(match.params.id)} />\n            }/>\n          </Grid.Column>\n        </Grid>\n\n      </div>\n    </Router>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return{\n    groups: state.group\n  }\n}\n\nexport default connect(mapStateToProps, { initGroups })(App)\n","const room = ''\n\nexport const changeGroup = (newRoom) => {\n  return{\n    type:'CHANGE',\n    data: newRoom\n  }\n}\nconst groupReducer = (state = room, action ) => {\n  switch(action.type){\n  case 'CHANGE':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default groupReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport groupReducer from './reducers/groupReducer'\nimport roomReducer from './reducers/roomReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  group: groupReducer,\n  room: roomReducer\n})\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n//import './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>\n  , document.getElementById('root'))\n"],"sourceRoot":""}